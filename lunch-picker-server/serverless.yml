# NOTE: update this with your service name
service: lunch-picker-server

# Use the serverless-webpack plugin to transpile ES6
plugins:
  - serverless-webpack
  - serverless-offline

# serverless-webpack configuration
# Enable auto-packing of external modules
custom:
  webpackIncludeModules:
    forceInclude:
      - mysql2
    forceExclude:
      - aws-sdk

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev
  region: ap-southeast-2
  environment: ${file(serverless-var.yml):${self:provider.stage}}
  vpc:
    securityGroupIds:
      - sg-01d0fbe4e3c2c4247
    subnetIds:
      - subnet-242ed57c
      - subnet-fe0f4b99
  # To load environment variables externally
  # rename env.example to env.yml and uncomment
  # the following line. Also, make sure to not
  # commit your env.yml.
  #
  #environment: ${file(env.yml):${self:provider.stage}}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:*
      Resource: "*"
    - Effect: Allow
      Action:
        - ec2:CreateNetworkInterface 
        - ec2:DescribeNetworkInterfaces
        - ec2:DeleteNetworkInterface 
      Resource: "*"
    - Effect: Allow
      Action: 
        - ssm:GetParameter
        - ssm:GetParameters
      Resource: "*"
    - Effect: Allow
      Action: 
        - rekognition:*	
      Resource: "*"
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:ap-southeast-2:*:*"
      
package:
  individually: true

functions:
  create:
    handler: src/api/create.handler
    events:
      - http:
          path: restaurants
          method: post
          cors: true
          authorizer: aws_iam

  get:
    handler: src/api/get.handler
    events:
      - http:
          path: restaurants/{id}
          method: get
          cors: true
          authorizer: aws_iam

  update:
    handler: src/api/update.handler
    events:
      - http:
          path: restaurants/{id}
          method: put
          cors: true
          authorizer: aws_iam
  
  delete:
    handler: src/api/delete.handler
    events:
      - http:
          path: restaurants/{id}
          method: delete
          cors: true
          authorizer: aws_iam

  list:
    handler: src/api/list.handler
    events:
      - http:
          path: restaurants
          method: get
          cors: true
          authorizer: aws_iam

  detect:
    handler: src/api/detect.handler
    events:
      - http:
          path: restaurants/detect
          method: get
          cors: true
          authorizer: aws_iam

  yelpSearch:
    handler: src/api/yelp/search.handler
    events:
      - http:
          path: restaurants/external/search
          method: get
          cors: true
          authorizer: aws_iam
    
  yelpGet:
    handler: src/api/yelp/get.handler
    events:
      - http:
          path: restaurants/external/{id}
          method: get
          cors: true
          authorizer: aws_iam

  yelpReviews: 
    handler: src/api/yelp/reviews.handler
    events:
      - http:
          path: restaurants/external/{id}/reviews
          method: get
          cors: true
          authorizer: aws_iam

  

